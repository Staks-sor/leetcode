func twoSum(nums []int, target int) []int {
    // Создаем словарь для хранения значений и их индексов
    numMap := make(map[int]int)
    
    for i, num := range nums {
        // Проверяем, имеется ли в словаре значение, которое в сумме с текущим числом даст целевое значение
        complement := target - num
        if index, ok := numMap[complement]; ok {
            // Если значение найдено, возвращаем индекс текущего числа и индекс значения из словаря
            return []int{index, i}
        }
        
        // Если значение не найдено, добавляем текущее число и его индекс в словарь
        numMap[num] = i
    }
    
    // Если не было найдено пары чисел, возвращаем пустой массив
    return []int{}
}
